; CMHG template, generated by CMunge 0.77 (13 Jun 2006)

; You should give your module a sensible name which describes its purpose
; both accurately and concisely. You must register any module names you use
; if they are to be distributed.
title-string: MyTestModule

; The help-string is the name that is displayed to the user in *Help Modules
; and other places that a more readable name is required. You should attempt
; to make this a readable version of the title-string, and - at worst - use
; the same name as in the title-string. The tail message may be used to
; indicate a variant of the module, or a copyright string.
help-string: My Test Module 0.01

; If you supply SWIs in your module, you must provide a base number at which
; these start. Each chunk is 64 entries long and must be registered if the
; module is going to be distributed.
; SWI chunks &0- &3FFC0 are for operating system use.
; &40000- &7FFC0 are for operating system exetensions.
; &80000- &BFFC0 are for third party applications.
; &C0000- &FFFC0 are for user applications.
; Bit 17 will always be clear on the SWI chunk number.
; Consult PRM 1-26 for more details.
swi-chunk-base-number: &C0000

; When the module is initialised, this routine will be entered. You should
; be very careful to initialise your module safely. If anything fails, you
; can return an error message. Finalisation code will not be called if you
; return an error.
initialisation-code: Mod_Init

; The SWI decoding table lists the SWIs which the module supplies. The first
; entry is always the SWI prefix, used on all SWIs that the module provides.
; This should be the name of the module, or some obvious variant. You should
; register your SWI prefixes when you register a SWI chunk. Each name entry
; may be followed by /<entry> to use a particular routine to handle a SWI.
swi-decoding-table: MyTestModule Test/SWI_Test

; The command table is one of the more complex fields in the CMHG file. The
; first entry is the routine to call to process the commands as they arrive.
; The remainder of the entries are the command definitions. These take the
; form :
;   <Command>({<field>: <value>})
; 
; Field names:
;   min-args: <number>
;     Minimum number of arguments acceptable for this command.
;   max-args: <number>
;     Maximum number of arguments acceptable for this command.
;   gstrans-map: <bits>
;     A bit-field describing which arguments to the command will be
;     processed by GSTrans before being passed to the module.
;   fs-command: 
;     This command is a filing system specific command. It will only be used
;     if the current filing system is this module.
;   international: 
;     The help text for this command should be translated through the
;     messages file supplied in the 'international-help-file' field.
;   add-syntax: 
;     The text supplied in the 'invalid-syntax' field will be appended to
;     the text supplied in the 'help-text' field.
;   configure: 
;     The command is used for *Status and *Configure commands only. This is
;     equivilent to the 'status' field.
;   status: 
;     The command is used for *Status and *Configure commands only. This is
;     equivilent to the 'configure' field.
;   help: 
;     The command handler will be called to process help requests.
;   invalid-syntax: <string>
;     When an invalid syntax has been supplied, the supplied text will be
;     displayed. If the 'add-syntax' field is used, the text will be
;     appended to the content of the 'help-text' field. If the
;     'international' field is set, the string supplied is a token to be
;     looked up in the messages file.
;   help-text: <string>
;     When an invalid syntax has been supplied, the supplied text will be
;     displayed. If the 'add-syntax' field is used, the text will be
;     appended to the content of the 'help-text' field. If the
;     'international' field is set, the string supplied is a token to be
;     looked up in the messages file.
;   handler: <function>
;     The function to call to handle this command. Setting this field
;     overrides the use of default handler function.
;   no-handler: 
;     The command has no handler function present. This is useful for
;     creating help-only commands.
command-keyword-table: Mod_Command
   TestCommand(max-args: 1)
